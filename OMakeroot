open build/OCaml
open tools/OMakeLibrary.om
DefineCommandVars()

.PHONY: build-all doc install uninstall


################################################################################
# General Project Information
PROJECT = biokepi
VERSION = 0.0.0+master
DESCRIPTION = Bioinformatics Ketrew Workflow-Building Library

if $(test -e .git)
    # this one works with quotes not the `None` one
    GIT_COMMIT = 'Some "$(shell git rev-parse HEAD)"'
    export
else
    GIT_COMMIT = None
    export

LIB_PACKAGES = ketrew ppx_deriving.std

OCAMLFLAGS = -bin-annot -absname -thread -short-paths -g \
              -strict-formats -strict-sequence -w +9 -safe-string

section # Main library
    OCAMLPACKS[] = $(LIB_PACKAGES)
    _build/src/lib/metadata.ml: :value: $(VERSION)
        echo "(** Metadata generated at compile-time *)" > $@
        echo "let version = lazy \"$(VERSION)\"" >> $@
        echo "let git_commit = $(GIT_COMMIT)" >> $@
    OCAML_GENERATED_MODULES[] = metadata
    .DEFAULT: $(OCamlPackedLibraryOfDir biokepi, src/lib)

section # "main" demo application
    OCAML_LOCAL_LIBS += src/lib/biokepi
    OCAMLPACKS[] = $(LIB_PACKAGES)
    .DEFAULT: $(OCamlProgramOfFile biokepi-demo, $(file src/app/main.ml))

section # Executable tests
    OCAML_LOCAL_LIBS += src/lib/biokepi
    OCAMLPACKS[] = $(LIB_PACKAGES)
    #.PHONY: biokepi-tests biokepi-test-all-downloads biokepi-hla-typing
    #biokepi-tests: $(OCamlProgramOfFile biokepi-tests, $(file src/test/main.ml))
    #biokepi-test-all-downloads: $(OCamlProgramOfFile biokepi-test-all-downloads, $(file src/test/all_downloads.ml))
    #biokepi-hla-typing: $(OCamlProgramOfFile biokepi-hla-typer, $(file src/app/hla_typer.ml))
    OCamlProgramOfFile(biokepi-tests, $(file src/test/main.ml))
    OCamlProgramOfFile(biokepi-test-all-downloads, $(file src/test/all_downloads.ml))
    OCamlProgramOfFile(biokepi-hla-typer, $(file src/app/hla_typer.ml))


DotMerlin(./src, $(LIB_PACKAGES))

install: install-lib-biokepi install-app-biokepi-demo
uninstall: uninstall-lib-biokepi uninstall-app-biokepi-demo

# `omake build-all` to build also the tests:
build-all: lib-biokepi app-biokepi-demo \
    app-biokepi-tests app-biokepi-test-all-downloads app-biokepi-hla-typer

.PHONY: doc

DOC_PACKAGES[] = $(LIB_PACKAGES)
doc:
    mkdir -p _build/apidoc/ && \
    ocamlfind ocamldoc -html -d _build/apidoc/ -package $(concat \,, $(LIB_PACKAGES))  -thread \
              -charset UTF-8 -t "Biokepi API" -keep-code -colorize-code \
              -I _build/src/lib/  \
              src/lib/* && \
    INPUT=src  \
        INDEX=README.md \
        TITLE_PREFIX="Biokepi: " \
        OUTPUT_DIR=_build/doc \
        API=_build/apidoc/ \
        CATCH_MODULE_PATHS='^(Biokepi[A-Z_a-z]+):', \
        TITLE_SUBSTITUTIONS="main.ml:Literate Tests" \
        oredoc


DIRS[] = src/lib
LIBS[] = biokepi
DotOCamlinit($(DIRS), $(LIB_PACKAGES), $(LIBS))
